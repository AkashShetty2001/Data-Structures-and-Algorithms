/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {

        //calculate size
        int sz=0;
        ListNode temp= head;
        while(temp!=null){
            temp=temp.next;
            sz++;
        }

        //corner case 
        if(sz == n){
            head=head.next;
            return head;
        }

        //sz-n
        int i=1;
        int iToFind=sz-n;
        ListNode prev= head;
        while(i < iToFind){
            prev=prev.next;
            i++;
        }

        //After getting previous node
        prev.next=prev.next.next;
        return head;


        
    }
}